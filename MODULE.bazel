module(
    name = "home-ops",
)

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

############
# Binaries #
############

# Age binary

http_archive(
    name = "age",
    build_file = "@home-ops//bazel/third_party:age.bazel",
    sha256 = "7df45a6cc87d4da11cc03a539a7470c15b1041ab2b396af088fe9990f7c79d50",
    url = "https://github.com/FiloSottile/age/releases/download/v1.2.1/age-v1.2.1-linux-amd64.tar.gz",
)

# Packer binary

http_archive(
    name = "packer",
    build_file = "@home-ops//bazel/third_party:packer.bazel",
    sha256 = "790183b1febe0f3f919bac22b193dfbba031a6e30a148ecc69816fcc47eec702",
    url = "https://releases.hashicorp.com/packer/1.8.4/packer_1.8.4_linux_386.zip",
)

# Coder binary

http_archive(
    name = "coder",
    build_file = "@home-ops//bazel/third_party:coder.bazel",
    sha256 = "b96de42d073ce3706da31bec48aae6c95d0fe96040361c6443bc43e181a617db",
    url = "https://github.com/coder/coder/releases/download/v2.26.1/coder_2.26.1_linux_amd64.tar.gz",
)

# Bazelisk binary

http_file(
    name = "bazelisk",
    executable=True,
    sha256 = "e1508323f347ad1465a887bc5d2bfb91cffc232d11e8e997b623227c6b32fb76",
    url = "https://github.com/bazelbuild/bazelisk/releases/download/v1.27.0/bazelisk-linux-amd64",
)

# GitHub Actions runner

http_archive(
    name = "runner",
    build_file = "@home-ops//bazel/third_party:runner.bazel",
    sha256 = "01066fad3a2893e63e6ca880ae3a1fad5bf9329d60e77ee15f2b97c148c3cd4e",
    url = "https://github.com/actions/runner/releases/download/v2.328.0/actions-runner-linux-x64-2.328.0.tar.gz",
)

#########
# Rules #
#########

# Skylib
bazel_dep(name = "bazel_skylib", version = "1.8.2")

# Aspect bazel lib
bazel_dep(name = "aspect_bazel_lib", version = "2.21.2")

# rules_pkg
bazel_dep(name = "rules_pkg", version = "1.1.0")

# rules_oci
bazel_dep(name = "rules_oci", version = "2.2.6")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:9e9b50d2048db3741f86a48d939b4e4cc775f5889b3496439343301ff54cdba8",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
    ],
)
use_repo(oci, "distroless_base")

# rules_distroless
bazel_dep(name = "rules_distroless", version = "0.5.3")

apt = use_extension(
    "@rules_distroless//apt:extensions.bzl",
    "apt",
)
apt.install(
    name = "ubuntu_jammy",
    # For the initial setup, the lockfile attribute can be omitted and generated by running
    #    bazel run @ubuntu_jammy//:lock
    # This will generate the lock.json file next to the manifest file by replacing `.yaml` with `.lock.json`
    lock = "//images/actions-runner:apt.lock.json",
    manifest = "//images/actions-runner:apt.yaml",
)
use_repo(apt, "ubuntu_jammy")
