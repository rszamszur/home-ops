load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push")
load("@rules_distroless//apt:defs.bzl", "dpkg_status")
load("@rules_distroless//distroless:defs.bzl", "cacerts", "locale", "group", "home", "passwd")
load("@aspect_bazel_lib//lib:tar.bzl", "tar")
load("//images/common:variables.bzl", "MTIME", "ROOT")


PACKAGES = [
    "@ubuntu_jammy//libc-bin",
    "@ubuntu_jammy//libicu70",
    "@ubuntu_jammy//libssl3",
    "@ubuntu_jammy//libstdc++6",
    "@ubuntu_jammy//tzdata",
    "@ubuntu_jammy//zlib1g",
    "@ubuntu_jammy//gcc",
    "@ubuntu_jammy//git",
    "@ubuntu_jammy//gawk",
    "@ubuntu_jammy//sed",
    "@ubuntu_jammy//findutils",
    "@ubuntu_jammy//curl",
    "@ubuntu_jammy//tar",
    "@ubuntu_jammy//gzip",
    "@ubuntu_jammy//xz-utils",
    "@ubuntu_jammy//sudo",
    "@ubuntu_jammy//lsb-release",
    "@ubuntu_jammy//gpg-agent",
    "@ubuntu_jammy//software-properties-common",
    "@ubuntu_jammy//unzip",
    "@ubuntu_jammy//coreutils",
    "@ubuntu_jammy//bash",
    "@ubuntu_jammy//jq",
    "@ubuntu_jammy//grep",
]
RUNNER_UID = 1000
RUNNER_GID = 1000


tar(
    name = "symlinks",
    srcs = [],
    args = [
        "--format",
        "gnutar",
    ],
    compress = "gzip",
    mtree = [
        "./bin/ uid=0 gid=0 mode=0755 time=0.0 type=dir",
        "./bin/sh uid=0 gid=0 mode=0755 time=0.0 type=link link=/bin/bash",
        "./usr/bin uid=0 gid=0 mode=0755 time=0.0 type=dir",
        "./usr/bin/awk uid=0 gid=0 mode=0755 time=0.0 type=link link=/usr/bin/gawk",
    ],
)

group(
    name = "runner-group",
    entries = [
        {
            "name": "root",  # root_group
            "gid": ROOT,
            "password": "x",
        },
        {
            "name": "tty",  # tty_group
            "gid": 5,
            "password": "x",
        },
        {
            "name": "staff",  # staff_group
            "gid": 50,
            "password": "x",
        },
        {
            "name": "runner",
            "gid": RUNNER_GID,
            "password": "x",
        },
    ],
    time = MTIME,
)

passwd(
    name = "runner-passwd",
    entries = [
        {
            "gecos": ["root"],
            "gid": ROOT,
            "shell": "/sbin/nologin",
            "home": "/root",
            "uid": ROOT,
            "password": "x",
            "username": "root",
        },
        {
            "gecos": ["runner"],
            "gid": RUNNER_GID,
            "home": "/home/runner",
            "shell": "/bin/bash",
            "uid": RUNNER_UID,
            "password": "x",
            "username": "runner",
        },
    ],
)

home(
    name = "runner-home",
    dirs = [
                {
            "home": "/root",
            "uid": ROOT,
            "gid": ROOT,
            "mode": 700,
        },
        {
            "home": "/home",
            "uid": ROOT,
            "gid": ROOT,
            "mode": 755,
        },
        {
            "home": "/home/runner",
            "uid": RUNNER_UID,
            "gid": RUNNER_GID,
            "mode": 700,
        },
    ],
)

cacerts(
    name = "cacerts",
    package = "@ubuntu_jammy//ca-certificates/amd64:data",
    time = MTIME,
)

locale(
    name = "locale",
    charset = "C.utf8",
    package = "@ubuntu_jammy//libc-bin/amd64:data",
    time = MTIME,
)

# Creates /var/lib/dpkg/status with installed package information.
dpkg_status(
    name = "dpkg_status",
    controls = select({
        "@platforms//cpu:x86_64": [
            "%s/amd64:control" % package
            for package in PACKAGES
        ],
    }),
)

sh_binary(
    name = "bazel",
    srcs = ["@bazelisk//file:file"],
)

pkg_tar(
    name = "bazelisk_tar",
    srcs = [":bazel"],
    strip_prefix = ".",
    package_dir = "/usr/local/bin",
)

pkg_tar(
    name = "action_runner_tar",
    srcs = ["@runner//:actions-runner"],
    strip_prefix = ".",
    remap_paths = {
      "external/runner": "",
      "external/+_repo_rules2+runner": "",
    },
    package_dir = "/home/runner",
    owner = "{}.{}".format(RUNNER_UID, RUNNER_GID),
    mode = "0755"
)

oci_image(
    name = "image",
    # base = "@distroless_base",
    env = {
        "PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
        "SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt",
        "DEBIAN_FRONTEND": "noninteractive",
    },
    os = "linux",
    architecture = "amd64",
    tars = [
        "//images/common:rootfs",
        ":runner-passwd",
        ":runner-home",
        ":runner-group",
        "//images/common:tmp",
        ":cacerts",
        ":locale",
        ":bazelisk_tar",
        ":action_runner_tar",
        ":dpkg_status",
        ":symlinks",
    ] + select({
        "@platforms//cpu:x86_64": [
            "%s/amd64" % package
            for package in PACKAGES
        ],
    }),
    cmd = ["/bin/bash"],
    user = "%d" % RUNNER_UID,
    workdir = "/home/runner",
)

oci_push(
    name = "image.push",
    image = ":image",
    remote_tags = ["latest"],
    repository = "harbor.puqu.io/rszamszur/actions-runner",
)
